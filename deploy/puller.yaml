apiVersion: apps/v1
kind: Deployment
metadata:
  name: candidates-puller
  # namespace: [environment]
  labels:
    app: candidates-puller
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: candidates-puller
  template:
    metadata:
      labels:
        app: candidates-puller
    spec:
      containers:
      - name: candidates-puller
        image: ranker/puller
        imagePullPolicy: Always
        envFrom:
        - secretRef:
            name: candidates-puller
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
      readinessProbe:
        httpGet:
            path: /healthcheck
            port: 3000

---
apiVersion: v1
kind: Secret
metadata:
  name: candidates-puller
  # namespace: infra
type: Opaque
data:
  # echo -n 3000 | base64
  HEALTHCHECK_PORT: MzAwMA==
  # echo -n verbose | base64
  DEBUG: dmVyYm9zZQ==
  # echo -n mongodb://mongodb-headless:27017/rankdb | base64
  MONGODB_URI: bW9uZ29kYjovL21vbmdvZGItaGVhZGxlc3M6MjcwMTcvcmFua2Ri
  # echo -n redis://redis-master:6379 | base64
  REDIS_URI: cmVkaXM6Ly9yZWRpcy1tYXN0ZXI6NjM3OQ==
  # echo -n candidates | base64
  REDIS_READ_CHANNEL: Y2FuZGlkYXRlcw==
  # echo -n ranker | base64
  REDIS_PUSH_CHANNEL: cmFua2Vy

---
apiVersion: v1
kind: Service
metadata:
  name: candidates-puller
  labels:
    app: candidates-puller
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: http
  selector:
      app: candidates-puller
  type: ClusterIP
